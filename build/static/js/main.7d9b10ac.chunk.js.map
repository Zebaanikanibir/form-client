{"version":3,"sources":["Components/Login/Login.js","Components/UserDetails/UserDetails.js","Components/Users/Users.js","firebase.config.js","Components/Register/Register.js","Components/Screen2/Screen2.js","Components/Login/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useContext","UserContext","setLoggedInUser","history","useHistory","from","useLocation","state","pathname","useForm","mode","register","handleSubmit","errors","formState","useState","isSignedIn","name","email","photo","password","setUser","className","id","onSubmit","data","firebase","auth","signInWithEmailAndPassword","then","userCredential","user","displayName","photoURL","signedInUser","console","log","storeAuthToken","replace","catch","error","code","errorMessage","message","alert","currentUser","getIdToken","idToken","sessionStorage","setItem","setTimeout","clear","type","placeholder","required","pattern","value","maxLength","to","UserDetails","props","uName","address","_id","scope","onClick","fetch","method","res","json","result","style","width","color","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Users","users","setUsers","useEffect","map","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","Register","eventData","number","headers","body","JSON","stringify","createUserWithEmailAndPassword","Screen2","PrivateRoute","children","rest","loggedInUser","render","location","token","getItem","decodedToken","jwt_decode","currentTime","Date","getTime","exp","isLoggedIn","createContext","App","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d9b10ac.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport firebase from \"firebase/app\"\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n   \r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n  const location = useLocation()\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n    const { register, handleSubmit, formState: {\r\n        errors\r\n\r\n    } } = useForm({\r\n        mode: \"onChange\"\r\n    });\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        photo: '',\r\n        password:''\r\n\r\n    })\r\nconst onSubmit =(data) =>{\r\n    \r\n    \r\n    if(data.email&& data.password){\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n     \r\n      const { displayName, email, photoURL, password } = userCredential.user;\r\n      const signedInUser = {\r\n          isSignedIn: true,\r\n          name: displayName,\r\n          email: email,\r\n          photo: photoURL,\r\n          password:password\r\n      }\r\n      setUser(signedInUser)\r\n      setLoggedInUser(signedInUser);\r\n      console.log(displayName, email, password);\r\n      storeAuthToken()\r\n      history.replace(from);\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      if(errorMessage){\r\n     alert(errorMessage)\r\n      }\r\n    });\r\n    }\r\n    const storeAuthToken = () =>{\r\n        firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\r\n            console.log('token', idToken)\r\n           sessionStorage.setItem('token', idToken)\r\n    setTimeout(function() {\r\n    sessionStorage.clear()\r\n    },300000)\r\n\r\n           history.replace(from);\r\n          }).catch(function(error) {\r\n            // Handle error\r\n          });\r\n    }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App mt-5\">\r\n            <h3>Log In</h3>\r\n              <form id=\"logedIn\" onSubmit={handleSubmit(onSubmit)}>\r\n             \r\n                <input className=\"input\" id=\"email\" type=\"email\" placeholder=\"Enter Email\"{...register('email', {\r\n                    required: \"this is a required\", pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                        message: \"Invalid email address\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.email && <p>{errors.email.message}</p>}\r\n              <input className=\"input\" id=\"password\" type=\"password\" placeholder=\"password\" {...register('password', {\r\n                    required: \"this is a required\", maxLength: {\r\n                        value: 10,\r\n                        message: \"incorrect\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n                <input className=\"input primary\" type=\"submit\" />\r\n              </form>\r\n              <p>register here  <Link to=\"/register\">Register</Link></p>\r\n              \r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst UserDetails = (props) => {\r\n\r\n    const deleteProduct = (id) => {\r\n\r\n\r\n\r\n        console.log(id)\r\n\r\n        fetch(`https://polar-meadow-65365.herokuapp.com/delete/${id}`, {\r\n            method: 'DELETE'\r\n\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result) {\r\n                    alert('successfully deleted')\r\n                }\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const { uName, email, address, _id } = props.user\r\n    return (\r\n        <tr >\r\n\r\n            <th scope=\"row\">.</th>\r\n            <td>{uName}</td>\r\n            <td>{email}</td>\r\n            <td>{address}</td>\r\n            <td><svg onClick={() => deleteProduct(_id)} style={{ width: '30px', color: \"red\" }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg></td>\r\n\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default UserDetails;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport UserDetails from '../UserDetails/UserDetails';\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([])\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('https://polar-meadow-65365.herokuapp.com/users')\r\n            .then(res => res.json())\r\n            .then(data => setUsers(data))\r\n\r\n\r\n\r\n    }, [])\r\n    console.log('user', users)\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Address</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                \r\n                {\r\n                    users.map(user => <UserDetails user={user} key={user._id}></UserDetails>)\r\n                }\r\n                \r\n                </tbody>\r\n              \r\n            </table>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyDjuCQkkW_9DdPAvdZRZOzmIha-E-nQSqU\",\r\n    authDomain: \"register-form-c9ca1.firebaseapp.com\",\r\n    projectId: \"register-form-c9ca1\",\r\n    storageBucket: \"register-form-c9ca1.appspot.com\",\r\n    messagingSenderId: \"30829772585\",\r\n    appId: \"1:30829772585:web:be0414e9b8e0fee0760138\"\r\n  };\r\n  export default firebaseConfig;","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './Register.css';\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from '../../firebase.config';\r\nimport {\r\n\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const { register, handleSubmit, formState: {\r\n        errors\r\n\r\n    } } = useForm({\r\n        mode: \"onChange\"\r\n    });\r\n    console.log('err', errors)\r\n    const onSubmit = (data) => {\r\n\r\n        console.log('data', data)\r\n\r\n        const eventData = {\r\n\r\n            uName: data.uName,\r\n            email: data.email,\r\n            password: data.password,\r\n            number: data.number,\r\n            address: data.address\r\n        }\r\n\r\n\r\n\r\n        const url = `https://polar-meadow-65365.herokuapp.com/registered`\r\n        console.log(eventData)\r\n\r\n        fetch(url, {\r\n\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(eventData)\r\n        })\r\n            .then(res => alert('User added Successfully', res))\r\n\r\n        if (data.password && data.email) {\r\n            firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    var user = userCredential.user;\r\n                    console.log(user)\r\n                })\r\n                .catch((error) => {\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n\r\n                    if (errorMessage) {\r\n                        alert(errorMessage)\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <section className=\"App mt-5\">\r\n\r\n            <h3>Sign In</h3>\r\n            <form id=\"signedIn\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n\r\n\r\n\r\n                <input className=\"input\" id=\"Name\" type=\"text\" placeholder=\"User Name\"{...register('uName', {\r\n                    required: true, maxLength: {\r\n                        value: 30,\r\n                        message: \"Max length is 30\"\r\n                    },\r\n                    pattern: {\r\n                        value:\r\n                            /^(?!^\\.)(?!.*[-_.]$)[a-zA-Z0-9_.]+$/\r\n                        ,\r\n                        message: \"Not matches with pattern\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.uName && <p>{errors.uName.message}</p>}\r\n                <input className=\"input\" id=\"email\" type=\"email\" placeholder=\"Enter Email\"{...register('email', {\r\n                    required: \"this is a required\", pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                        message: \"Invalid email address\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.email && <p>{errors.email.message}</p>}\r\n                <input className=\"input\" id=\"password\" type=\"password\" placeholder=\"password\" {...register('password', {\r\n                    required: \"this is a required\", maxLength: {\r\n                        value: 10,\r\n                        message: \"Max length is 10\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n                <input className=\"input\" id=\"number\" type=\"number\" placeholder=\"Number\" {...register('number', {\r\n                    required: \"this is a required\", maxLength: {\r\n                        value: 10,\r\n                        message: \"Max length is 10\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.number && <p>{errors.number.message}</p>}\r\n                <input className=\"input\" id=\"address\" type=\"text\" placeholder=\"Address\" {...register('address', {\r\n                    required: \"this is a required\", maxLength: {\r\n                        value: 10,\r\n                        message: \"Max length is 10\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.address && <p>{errors.address.message}</p>}\r\n                <input className=\"input\" className=\"primary\" type=\"submit\" />\r\n\r\n\r\n\r\n            </form>\r\n\r\n            <p>Have any account? <Link to=\"/login\">Log in</Link></p>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react'\r\nimport Users from '../Users/Users'\r\nimport Register from '../Register/Register'\r\nconst Screen2 = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-5\">\r\n     \r\n      <Register></Register>\r\n      </div>\r\n     <div className=\"col-md-7\">\r\n       <h2>User Details</h2>\r\n     <Users></Users>\r\n     </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Screen2\r\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport jwt_decode from \"jwt-decode\";\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n\r\n   \r\n        const isLoggedIn = () => {\r\n            const token = sessionStorage.getItem('token');\r\n            if(!token){\r\n              return false;\r\n            }\r\n            const decodedToken = jwt_decode(token);\r\n            console.log(decodedToken)\r\n            // get current time\r\n            const currentTime = new Date().getTime() / 1000;\r\n            // compare the expiration time with the current time\r\n            // will return false if expired and will return true if not expired\r\n            console.log('exp',decodedToken.exp)\r\n            \r\n            return decodedToken.exp > currentTime;\r\n            \r\n          }\r\n    \r\n  \r\n\r\n\r\n    return (\r\n        <div>\r\n            <Route\r\n                {...rest}\r\n                render={({ location }) =>\r\n                (\r\n                    loggedInUser.email \r\n                    || isLoggedIn()) \r\n                     ? (\r\n                        children\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { createContext, useState } from 'react';\nimport './App.css';\nimport Screen1 from './Components/Screen1/Screen1'\nimport Login from './Components/Login/Login';\nimport Screen2 from './Components/Screen2/Screen2'\nimport Users from './Components/Users/Users';\nimport PrivateRoute from './Components/Login/PrivateRoute';\nimport Register from './Components/Register/Register';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport const UserContext = createContext();\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({})\n  return (\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n          <Route path=\"/register\">\n            <Register></Register>\n          </Route>\n          <PrivateRoute path=\"/screen2\">\n          <Screen2></Screen2>\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/\">\n           <Screen2></Screen2>\n          </PrivateRoute>\n          \n          \n        </Switch>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}